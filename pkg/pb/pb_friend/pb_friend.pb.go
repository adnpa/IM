// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.27.0
// source: pb_friend.proto

package pb_friend

import (
	pb_ws "github.com/adnpa/IM/pkg/pb/pb_ws"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetFriendsInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	OperationID string `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Token       string `protobuf:"bytes,3,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (x *GetFriendsInfoReq) Reset() {
	*x = GetFriendsInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendsInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendsInfoReq) ProtoMessage() {}

func (x *GetFriendsInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendsInfoReq.ProtoReflect.Descriptor instead.
func (*GetFriendsInfoReq) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{0}
}

func (x *GetFriendsInfoReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetFriendsInfoReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetFriendsInfoReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetFriendInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32          `protobuf:"varint,1,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ErrorMsg  string         `protobuf:"bytes,2,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	Data      *GetFriendData `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *GetFriendInfoResp) Reset() {
	*x = GetFriendInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendInfoResp) ProtoMessage() {}

func (x *GetFriendInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendInfoResp.ProtoReflect.Descriptor instead.
func (*GetFriendInfoResp) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{1}
}

func (x *GetFriendInfoResp) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetFriendInfoResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *GetFriendInfoResp) GetData() *GetFriendData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	FriendUid   string `protobuf:"bytes,2,opt,name=friendUid,proto3" json:"friendUid,omitempty"`
	ReqMessage  string `protobuf:"bytes,3,opt,name=ReqMessage,proto3" json:"ReqMessage,omitempty"`
	OperationID string `protobuf:"bytes,4,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
}

func (x *AddFriendReq) Reset() {
	*x = AddFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendReq) ProtoMessage() {}

func (x *AddFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendReq.ProtoReflect.Descriptor instead.
func (*AddFriendReq) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{2}
}

func (x *AddFriendReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AddFriendReq) GetFriendUid() string {
	if x != nil {
		return x.FriendUid
	}
	return ""
}

func (x *AddFriendReq) GetReqMessage() string {
	if x != nil {
		return x.ReqMessage
	}
	return ""
}

func (x *AddFriendReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type GetFriendApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	OperationID string `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"` //  string Token = 2;
}

func (x *GetFriendApplyReq) Reset() {
	*x = GetFriendApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendApplyReq) ProtoMessage() {}

func (x *GetFriendApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendApplyReq.ProtoReflect.Descriptor instead.
func (*GetFriendApplyReq) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{3}
}

func (x *GetFriendApplyReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetFriendApplyReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type GetFriendApplyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32            `protobuf:"varint,1,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ErrorMsg  string           `protobuf:"bytes,2,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	Data      []*ApplyUserInfo `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetFriendApplyResp) Reset() {
	*x = GetFriendApplyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendApplyResp) ProtoMessage() {}

func (x *GetFriendApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendApplyResp.ProtoReflect.Descriptor instead.
func (*GetFriendApplyResp) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{4}
}

func (x *GetFriendApplyResp) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetFriendApplyResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *GetFriendApplyResp) GetData() []*ApplyUserInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApplyUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon       string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Gender     int32  `protobuf:"varint,4,opt,name=gender,proto3" json:"gender,omitempty"`
	Mobile     string `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Birth      string `protobuf:"bytes,6,opt,name=birth,proto3" json:"birth,omitempty"`
	Email      string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Ex         string `protobuf:"bytes,8,opt,name=ex,proto3" json:"ex,omitempty"`
	Flag       int32  `protobuf:"varint,9,opt,name=flag,proto3" json:"flag,omitempty"`
	ApplyTime  string `protobuf:"bytes,10,opt,name=applyTime,proto3" json:"applyTime,omitempty"`
	ReqMessage string `protobuf:"bytes,11,opt,name=reqMessage,proto3" json:"reqMessage,omitempty"`
}

func (x *ApplyUserInfo) Reset() {
	*x = ApplyUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyUserInfo) ProtoMessage() {}

func (x *ApplyUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyUserInfo.ProtoReflect.Descriptor instead.
func (*ApplyUserInfo) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{5}
}

func (x *ApplyUserInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ApplyUserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplyUserInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ApplyUserInfo) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *ApplyUserInfo) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *ApplyUserInfo) GetBirth() string {
	if x != nil {
		return x.Birth
	}
	return ""
}

func (x *ApplyUserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ApplyUserInfo) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *ApplyUserInfo) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *ApplyUserInfo) GetApplyTime() string {
	if x != nil {
		return x.ApplyTime
	}
	return ""
}

func (x *ApplyUserInfo) GetReqMessage() string {
	if x != nil {
		return x.ReqMessage
	}
	return ""
}

type GetFriendListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Uid         string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetFriendListReq) Reset() {
	*x = GetFriendListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendListReq) ProtoMessage() {}

func (x *GetFriendListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendListReq.ProtoReflect.Descriptor instead.
func (*GetFriendListReq) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{6}
}

func (x *GetFriendListReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetFriendListReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type GetFriendListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32             `protobuf:"varint,1,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ErrorMsg  string            `protobuf:"bytes,2,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	Data      []*pb_ws.UserInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetFriendListResp) Reset() {
	*x = GetFriendListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendListResp) ProtoMessage() {}

func (x *GetFriendListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendListResp.ProtoReflect.Descriptor instead.
func (*GetFriendListResp) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{7}
}

func (x *GetFriendListResp) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetFriendListResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *GetFriendListResp) GetData() []*pb_ws.UserInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddBlacklistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	FriendUid   string `protobuf:"bytes,4,opt,name=friendUid,proto3" json:"friendUid,omitempty"`
	OperationID string `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"` //  string Token = 3;
}

func (x *AddBlacklistReq) Reset() {
	*x = AddBlacklistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBlacklistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBlacklistReq) ProtoMessage() {}

func (x *AddBlacklistReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBlacklistReq.ProtoReflect.Descriptor instead.
func (*AddBlacklistReq) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{8}
}

func (x *AddBlacklistReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AddBlacklistReq) GetFriendUid() string {
	if x != nil {
		return x.FriendUid
	}
	return ""
}

func (x *AddBlacklistReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type RemoveBlacklistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	OperationID string `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	FriendUid   string `protobuf:"bytes,3,opt,name=friendUid,proto3" json:"friendUid,omitempty"`
}

func (x *RemoveBlacklistReq) Reset() {
	*x = RemoveBlacklistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveBlacklistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBlacklistReq) ProtoMessage() {}

func (x *RemoveBlacklistReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBlacklistReq.ProtoReflect.Descriptor instead.
func (*RemoveBlacklistReq) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveBlacklistReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *RemoveBlacklistReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *RemoveBlacklistReq) GetFriendUid() string {
	if x != nil {
		return x.FriendUid
	}
	return ""
}

type GetBlacklistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Uid         string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetBlacklistReq) Reset() {
	*x = GetBlacklistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlacklistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlacklistReq) ProtoMessage() {}

func (x *GetBlacklistReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlacklistReq.ProtoReflect.Descriptor instead.
func (*GetBlacklistReq) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{10}
}

func (x *GetBlacklistReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetBlacklistReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type GetBlacklistResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32             `protobuf:"varint,1,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ErrorMsg  string            `protobuf:"bytes,2,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	Data      []*pb_ws.UserInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetBlacklistResp) Reset() {
	*x = GetBlacklistResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlacklistResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlacklistResp) ProtoMessage() {}

func (x *GetBlacklistResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlacklistResp.ProtoReflect.Descriptor instead.
func (*GetBlacklistResp) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{11}
}

func (x *GetBlacklistResp) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetBlacklistResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *GetBlacklistResp) GetData() []*pb_ws.UserInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type IsFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	FriendUid   string `protobuf:"bytes,2,opt,name=friendUid,proto3" json:"friendUid,omitempty"`
	OperationID string `protobuf:"bytes,3,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
}

func (x *IsFriendReq) Reset() {
	*x = IsFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFriendReq) ProtoMessage() {}

func (x *IsFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFriendReq.ProtoReflect.Descriptor instead.
func (*IsFriendReq) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{12}
}

func (x *IsFriendReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *IsFriendReq) GetFriendUid() string {
	if x != nil {
		return x.FriendUid
	}
	return ""
}

func (x *IsFriendReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type IsFriendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32  `protobuf:"varint,1,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ErrorMsg  string `protobuf:"bytes,2,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	ShipType  int32  `protobuf:"varint,3,opt,name=shipType,proto3" json:"shipType,omitempty"`
}

func (x *IsFriendResp) Reset() {
	*x = IsFriendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFriendResp) ProtoMessage() {}

func (x *IsFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFriendResp.ProtoReflect.Descriptor instead.
func (*IsFriendResp) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{13}
}

func (x *IsFriendResp) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *IsFriendResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *IsFriendResp) GetShipType() int32 {
	if x != nil {
		return x.ShipType
	}
	return 0
}

type IsInBlackListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendUid     string `protobuf:"bytes,1,opt,name=sendUid,proto3" json:"sendUid,omitempty"`
	ReceiveUid  string `protobuf:"bytes,2,opt,name=receiveUid,proto3" json:"receiveUid,omitempty"`
	OperationID string `protobuf:"bytes,3,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
}

func (x *IsInBlackListReq) Reset() {
	*x = IsInBlackListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsInBlackListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsInBlackListReq) ProtoMessage() {}

func (x *IsInBlackListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsInBlackListReq.ProtoReflect.Descriptor instead.
func (*IsInBlackListReq) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{14}
}

func (x *IsInBlackListReq) GetSendUid() string {
	if x != nil {
		return x.SendUid
	}
	return ""
}

func (x *IsInBlackListReq) GetReceiveUid() string {
	if x != nil {
		return x.ReceiveUid
	}
	return ""
}

func (x *IsInBlackListReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type IsInBlackListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32  `protobuf:"varint,1,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ErrorMsg  string `protobuf:"bytes,2,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	Response  bool   `protobuf:"varint,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *IsInBlackListResp) Reset() {
	*x = IsInBlackListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsInBlackListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsInBlackListResp) ProtoMessage() {}

func (x *IsInBlackListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsInBlackListResp.ProtoReflect.Descriptor instead.
func (*IsInBlackListResp) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{15}
}

func (x *IsInBlackListResp) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *IsInBlackListResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *IsInBlackListResp) GetResponse() bool {
	if x != nil {
		return x.Response
	}
	return false
}

type DeleteFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	FriendUid   string `protobuf:"bytes,2,opt,name=friendUid,proto3" json:"friendUid,omitempty"`
	OperationID string `protobuf:"bytes,3,opt,name=OperationID,proto3" json:"OperationID,omitempty"` //  string Token = 3;
}

func (x *DeleteFriendReq) Reset() {
	*x = DeleteFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendReq) ProtoMessage() {}

func (x *DeleteFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendReq.ProtoReflect.Descriptor instead.
func (*DeleteFriendReq) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteFriendReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *DeleteFriendReq) GetFriendUid() string {
	if x != nil {
		return x.FriendUid
	}
	return ""
}

func (x *DeleteFriendReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type AddFriendResponseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	FriendUid   string `protobuf:"bytes,2,opt,name=friendUid,proto3" json:"friendUid,omitempty"`
	Flag        int32  `protobuf:"varint,3,opt,name=flag,proto3" json:"flag,omitempty"`
	OperationID string `protobuf:"bytes,4,opt,name=OperationID,proto3" json:"OperationID,omitempty"` //  string Token = 4;
}

func (x *AddFriendResponseReq) Reset() {
	*x = AddFriendResponseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendResponseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendResponseReq) ProtoMessage() {}

func (x *AddFriendResponseReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendResponseReq.ProtoReflect.Descriptor instead.
func (*AddFriendResponseReq) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{17}
}

func (x *AddFriendResponseReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AddFriendResponseReq) GetFriendUid() string {
	if x != nil {
		return x.FriendUid
	}
	return ""
}

func (x *AddFriendResponseReq) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *AddFriendResponseReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type SetFriendCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	FriendUid   string `protobuf:"bytes,2,opt,name=friendUid,proto3" json:"friendUid,omitempty"`
	Comment     string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	OperationID string `protobuf:"bytes,4,opt,name=operationID,proto3" json:"operationID,omitempty"` //  string token = 4;
}

func (x *SetFriendCommentReq) Reset() {
	*x = SetFriendCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFriendCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFriendCommentReq) ProtoMessage() {}

func (x *SetFriendCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFriendCommentReq.ProtoReflect.Descriptor instead.
func (*SetFriendCommentReq) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{18}
}

func (x *SetFriendCommentReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *SetFriendCommentReq) GetFriendUid() string {
	if x != nil {
		return x.FriendUid
	}
	return ""
}

func (x *SetFriendCommentReq) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *SetFriendCommentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type ImportFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UidList     []string `protobuf:"bytes,1,rep,name=uidList,proto3" json:"uidList,omitempty"`
	OperationID string   `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Token       string   `protobuf:"bytes,3,opt,name=Token,proto3" json:"Token,omitempty"`
	OwnerUid    string   `protobuf:"bytes,4,opt,name=OwnerUid,proto3" json:"OwnerUid,omitempty"`
}

func (x *ImportFriendReq) Reset() {
	*x = ImportFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportFriendReq) ProtoMessage() {}

func (x *ImportFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportFriendReq.ProtoReflect.Descriptor instead.
func (*ImportFriendReq) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{19}
}

func (x *ImportFriendReq) GetUidList() []string {
	if x != nil {
		return x.UidList
	}
	return nil
}

func (x *ImportFriendReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *ImportFriendReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ImportFriendReq) GetOwnerUid() string {
	if x != nil {
		return x.OwnerUid
	}
	return ""
}

type ImportFriendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp    *pb_ws.CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	FailedUidList []string          `protobuf:"bytes,2,rep,name=failedUidList,proto3" json:"failedUidList,omitempty"`
}

func (x *ImportFriendResp) Reset() {
	*x = ImportFriendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportFriendResp) ProtoMessage() {}

func (x *ImportFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportFriendResp.ProtoReflect.Descriptor instead.
func (*ImportFriendResp) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{20}
}

func (x *ImportFriendResp) GetCommonResp() *pb_ws.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *ImportFriendResp) GetFailedUidList() []string {
	if x != nil {
		return x.FailedUidList
	}
	return nil
}

type GetFriendData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid           string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Icon          string `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	Name          string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Gender        int32  `protobuf:"varint,4,opt,name=gender,proto3" json:"gender,omitempty"`
	Mobile        string `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Birth         string `protobuf:"bytes,6,opt,name=birth,proto3" json:"birth,omitempty"`
	Email         string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Ex            string `protobuf:"bytes,8,opt,name=ex,proto3" json:"ex,omitempty"`
	Comment       string `protobuf:"bytes,9,opt,name=comment,proto3" json:"comment,omitempty"`
	IsFriend      int32  `protobuf:"varint,10,opt,name=isFriend,proto3" json:"isFriend,omitempty"`
	IsInBlackList int32  `protobuf:"varint,11,opt,name=isInBlackList,proto3" json:"isInBlackList,omitempty"`
}

func (x *GetFriendData) Reset() {
	*x = GetFriendData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_friend_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendData) ProtoMessage() {}

func (x *GetFriendData) ProtoReflect() protoreflect.Message {
	mi := &file_pb_friend_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendData.ProtoReflect.Descriptor instead.
func (*GetFriendData) Descriptor() ([]byte, []int) {
	return file_pb_friend_proto_rawDescGZIP(), []int{21}
}

func (x *GetFriendData) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetFriendData) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *GetFriendData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetFriendData) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *GetFriendData) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *GetFriendData) GetBirth() string {
	if x != nil {
		return x.Birth
	}
	return ""
}

func (x *GetFriendData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetFriendData) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *GetFriendData) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *GetFriendData) GetIsFriend() int32 {
	if x != nil {
		return x.IsFriend
	}
	return 0
}

func (x *GetFriendData) GetIsInBlackList() int32 {
	if x != nil {
		return x.IsInBlackList
	}
	return 0
}

var File_pb_friend_proto protoreflect.FileDescriptor

var file_pb_friend_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x62, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0b, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5d,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x71, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x22, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x80, 0x01, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x71, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x71, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x22, 0x47, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x72, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x22, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x87, 0x02, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x71, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x46, 0x0a, 0x10, 0x67, 0x65,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x22, 0x7e, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73,
	0x67, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x63, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x55, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x55, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x66, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x22,
	0x45, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x7d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x73, 0x67, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5f, 0x0a, 0x0b, 0x49, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x55, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x64, 0x0a, 0x0c, 0x49, 0x73, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x22, 0x6e, 0x0a, 0x10,
	0x49, 0x73, 0x49, 0x6e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x55, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x69, 0x0a, 0x11,
	0x49, 0x73, 0x49, 0x6e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x63, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x7c, 0x0a, 0x14,
	0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x55, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x81, 0x01, 0x0a, 0x13, 0x53,
	0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x7f,
	0x0a, 0x0f, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22,
	0x77, 0x0a, 0x10, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x55, 0x69, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x55, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x91, 0x02, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x72, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x49, 0x6e, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69,
	0x73, 0x49, 0x6e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x32, 0xd9, 0x06, 0x0a,
	0x06, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x38, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x39, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x0d,
	0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x12,
	0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x10, 0x67,
	0x65, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x12, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x11, 0x2e, 0x67, 0x65, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x67,
	0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3f, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x10, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x45, 0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x08, 0x69, 0x73, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x12, 0x0c, 0x2e, 0x49, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x49, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x36, 0x0a, 0x0d, 0x69, 0x73, 0x49, 0x6e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x11, 0x2e, 0x49, 0x73, 0x49, 0x6e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x49, 0x73, 0x49, 0x6e, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0c, 0x67, 0x65, 0x74,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f,
	0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x10,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x49, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x10, 0x73, 0x65,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14,
	0x2e, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0c, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x12, 0x10, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x64, 0x6e, 0x70, 0x61, 0x2f, 0x49, 0x4d, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x62, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_friend_proto_rawDescOnce sync.Once
	file_pb_friend_proto_rawDescData = file_pb_friend_proto_rawDesc
)

func file_pb_friend_proto_rawDescGZIP() []byte {
	file_pb_friend_proto_rawDescOnce.Do(func() {
		file_pb_friend_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_friend_proto_rawDescData)
	})
	return file_pb_friend_proto_rawDescData
}

var file_pb_friend_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_pb_friend_proto_goTypes = []interface{}{
	(*GetFriendsInfoReq)(nil),    // 0: GetFriendsInfoReq
	(*GetFriendInfoResp)(nil),    // 1: GetFriendInfoResp
	(*AddFriendReq)(nil),         // 2: AddFriendReq
	(*GetFriendApplyReq)(nil),    // 3: GetFriendApplyReq
	(*GetFriendApplyResp)(nil),   // 4: GetFriendApplyResp
	(*ApplyUserInfo)(nil),        // 5: ApplyUserInfo
	(*GetFriendListReq)(nil),     // 6: getFriendListReq
	(*GetFriendListResp)(nil),    // 7: getFriendListResp
	(*AddBlacklistReq)(nil),      // 8: AddBlacklistReq
	(*RemoveBlacklistReq)(nil),   // 9: RemoveBlacklistReq
	(*GetBlacklistReq)(nil),      // 10: GetBlacklistReq
	(*GetBlacklistResp)(nil),     // 11: GetBlacklistResp
	(*IsFriendReq)(nil),          // 12: IsFriendReq
	(*IsFriendResp)(nil),         // 13: IsFriendResp
	(*IsInBlackListReq)(nil),     // 14: IsInBlackListReq
	(*IsInBlackListResp)(nil),    // 15: IsInBlackListResp
	(*DeleteFriendReq)(nil),      // 16: DeleteFriendReq
	(*AddFriendResponseReq)(nil), // 17: AddFriendResponseReq
	(*SetFriendCommentReq)(nil),  // 18: SetFriendCommentReq
	(*ImportFriendReq)(nil),      // 19: ImportFriendReq
	(*ImportFriendResp)(nil),     // 20: ImportFriendResp
	(*GetFriendData)(nil),        // 21: GetFriendData
	(*pb_ws.UserInfo)(nil),       // 22: server_api_params.UserInfo
	(*pb_ws.CommonResp)(nil),     // 23: server_api_params.CommonResp
}
var file_pb_friend_proto_depIdxs = []int32{
	21, // 0: GetFriendInfoResp.Data:type_name -> GetFriendData
	5,  // 1: GetFriendApplyResp.data:type_name -> ApplyUserInfo
	22, // 2: getFriendListResp.data:type_name -> server_api_params.UserInfo
	22, // 3: GetBlacklistResp.data:type_name -> server_api_params.UserInfo
	23, // 4: ImportFriendResp.commonResp:type_name -> server_api_params.CommonResp
	0,  // 5: friend.getFriendsInfo:input_type -> GetFriendsInfoReq
	2,  // 6: friend.addFriend:input_type -> AddFriendReq
	3,  // 7: friend.getFriendApplyList:input_type -> GetFriendApplyReq
	3,  // 8: friend.getSelfApplyList:input_type -> GetFriendApplyReq
	6,  // 9: friend.getFriendList:input_type -> getFriendListReq
	8,  // 10: friend.addBlacklist:input_type -> AddBlacklistReq
	9,  // 11: friend.removeBlacklist:input_type -> RemoveBlacklistReq
	12, // 12: friend.isFriend:input_type -> IsFriendReq
	14, // 13: friend.isInBlackList:input_type -> IsInBlackListReq
	10, // 14: friend.getBlacklist:input_type -> GetBlacklistReq
	16, // 15: friend.deleteFriend:input_type -> DeleteFriendReq
	17, // 16: friend.addFriendResponse:input_type -> AddFriendResponseReq
	18, // 17: friend.setFriendComment:input_type -> SetFriendCommentReq
	19, // 18: friend.ImportFriend:input_type -> ImportFriendReq
	1,  // 19: friend.getFriendsInfo:output_type -> GetFriendInfoResp
	23, // 20: friend.addFriend:output_type -> server_api_params.CommonResp
	4,  // 21: friend.getFriendApplyList:output_type -> GetFriendApplyResp
	4,  // 22: friend.getSelfApplyList:output_type -> GetFriendApplyResp
	7,  // 23: friend.getFriendList:output_type -> getFriendListResp
	23, // 24: friend.addBlacklist:output_type -> server_api_params.CommonResp
	23, // 25: friend.removeBlacklist:output_type -> server_api_params.CommonResp
	13, // 26: friend.isFriend:output_type -> IsFriendResp
	15, // 27: friend.isInBlackList:output_type -> IsInBlackListResp
	11, // 28: friend.getBlacklist:output_type -> GetBlacklistResp
	23, // 29: friend.deleteFriend:output_type -> server_api_params.CommonResp
	23, // 30: friend.addFriendResponse:output_type -> server_api_params.CommonResp
	23, // 31: friend.setFriendComment:output_type -> server_api_params.CommonResp
	20, // 32: friend.ImportFriend:output_type -> ImportFriendResp
	19, // [19:33] is the sub-list for method output_type
	5,  // [5:19] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_pb_friend_proto_init() }
func file_pb_friend_proto_init() {
	if File_pb_friend_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_friend_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendsInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_friend_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_friend_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_friend_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_friend_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendApplyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_friend_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_friend_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_friend_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_friend_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBlacklistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_friend_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveBlacklistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_friend_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlacklistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_friend_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlacklistResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_friend_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_friend_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFriendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_friend_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsInBlackListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_friend_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsInBlackListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_friend_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_friend_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendResponseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_friend_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetFriendCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_friend_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_friend_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportFriendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_friend_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_friend_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_friend_proto_goTypes,
		DependencyIndexes: file_pb_friend_proto_depIdxs,
		MessageInfos:      file_pb_friend_proto_msgTypes,
	}.Build()
	File_pb_friend_proto = out.File
	file_pb_friend_proto_rawDesc = nil
	file_pb_friend_proto_goTypes = nil
	file_pb_friend_proto_depIdxs = nil
}
