// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.1
// source: group.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetUserGroupsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserGroupsReq) Reset() {
	*x = GetUserGroupsReq{}
	mi := &file_group_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserGroupsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserGroupsReq) ProtoMessage() {}

func (x *GetUserGroupsReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserGroupsReq.ProtoReflect.Descriptor instead.
func (*GetUserGroupsReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserGroupsReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserGroupsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupIds      []int64                `protobuf:"varint,1,rep,packed,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserGroupsResp) Reset() {
	*x = GetUserGroupsResp{}
	mi := &file_group_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserGroupsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserGroupsResp) ProtoMessage() {}

func (x *GetUserGroupsResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserGroupsResp.ProtoReflect.Descriptor instead.
func (*GetUserGroupsResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserGroupsResp) GetGroupIds() []int64 {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

type GetGroupInfoByIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       int64                  `protobuf:"varint,1,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGroupInfoByIdReq) Reset() {
	*x = GetGroupInfoByIdReq{}
	mi := &file_group_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupInfoByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupInfoByIdReq) ProtoMessage() {}

func (x *GetGroupInfoByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupInfoByIdReq.ProtoReflect.Descriptor instead.
func (*GetGroupInfoByIdReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{2}
}

func (x *GetGroupInfoByIdReq) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type GetGroupInfoByIdResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupInfo     *GroupInfo             `protobuf:"bytes,1,opt,name=group_info,json=groupInfo,proto3" json:"group_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGroupInfoByIdResp) Reset() {
	*x = GetGroupInfoByIdResp{}
	mi := &file_group_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupInfoByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupInfoByIdResp) ProtoMessage() {}

func (x *GetGroupInfoByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupInfoByIdResp.ProtoReflect.Descriptor instead.
func (*GetGroupInfoByIdResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{3}
}

func (x *GetGroupInfoByIdResp) GetGroupInfo() *GroupInfo {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

type CreateGroupInfoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupInfo     *GroupInfo             `protobuf:"bytes,1,opt,name=group_info,json=groupInfo,proto3" json:"group_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupInfoReq) Reset() {
	*x = CreateGroupInfoReq{}
	mi := &file_group_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupInfoReq) ProtoMessage() {}

func (x *CreateGroupInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupInfoReq.ProtoReflect.Descriptor instead.
func (*CreateGroupInfoReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{4}
}

func (x *CreateGroupInfoReq) GetGroupInfo() *GroupInfo {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

type CreateGroupInfoResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       int64                  `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupInfoResp) Reset() {
	*x = CreateGroupInfoResp{}
	mi := &file_group_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupInfoResp) ProtoMessage() {}

func (x *CreateGroupInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupInfoResp.ProtoReflect.Descriptor instead.
func (*CreateGroupInfoResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{5}
}

func (x *CreateGroupInfoResp) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type UpdateGroupInfoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupInfo     *GroupInfo             `protobuf:"bytes,1,opt,name=group_info,json=groupInfo,proto3" json:"group_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGroupInfoReq) Reset() {
	*x = UpdateGroupInfoReq{}
	mi := &file_group_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGroupInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupInfoReq) ProtoMessage() {}

func (x *UpdateGroupInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupInfoReq.ProtoReflect.Descriptor instead.
func (*UpdateGroupInfoReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateGroupInfoReq) GetGroupInfo() *GroupInfo {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

type UpdateGroupInfoResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Succ          bool                   `protobuf:"varint,1,opt,name=succ,proto3" json:"succ,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGroupInfoResp) Reset() {
	*x = UpdateGroupInfoResp{}
	mi := &file_group_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGroupInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupInfoResp) ProtoMessage() {}

func (x *UpdateGroupInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupInfoResp.ProtoReflect.Descriptor instead.
func (*UpdateGroupInfoResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateGroupInfoResp) GetSucc() bool {
	if x != nil {
		return x.Succ
	}
	return false
}

type DeleteGroupInfoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       int64                  `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteGroupInfoReq) Reset() {
	*x = DeleteGroupInfoReq{}
	mi := &file_group_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGroupInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupInfoReq) ProtoMessage() {}

func (x *DeleteGroupInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupInfoReq.ProtoReflect.Descriptor instead.
func (*DeleteGroupInfoReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteGroupInfoReq) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type DeleteGroupInfoResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Succ          bool                   `protobuf:"varint,1,opt,name=succ,proto3" json:"succ,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteGroupInfoResp) Reset() {
	*x = DeleteGroupInfoResp{}
	mi := &file_group_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGroupInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupInfoResp) ProtoMessage() {}

func (x *DeleteGroupInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupInfoResp.ProtoReflect.Descriptor instead.
func (*DeleteGroupInfoResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteGroupInfoResp) GetSucc() bool {
	if x != nil {
		return x.Succ
	}
	return false
}

type GetGroupMemberByIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       int64                  `protobuf:"varint,1,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGroupMemberByIdReq) Reset() {
	*x = GetGroupMemberByIdReq{}
	mi := &file_group_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupMemberByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberByIdReq) ProtoMessage() {}

func (x *GetGroupMemberByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberByIdReq.ProtoReflect.Descriptor instead.
func (*GetGroupMemberByIdReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{10}
}

func (x *GetGroupMemberByIdReq) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type GetGroupMemberByIdResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Members       []*GroupMember         `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGroupMemberByIdResp) Reset() {
	*x = GetGroupMemberByIdResp{}
	mi := &file_group_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupMemberByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberByIdResp) ProtoMessage() {}

func (x *GetGroupMemberByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberByIdResp.ProtoReflect.Descriptor instead.
func (*GetGroupMemberByIdResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{11}
}

func (x *GetGroupMemberByIdResp) GetMembers() []*GroupMember {
	if x != nil {
		return x.Members
	}
	return nil
}

type CreateGroupMemberReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Member        *GroupMember           `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupMemberReq) Reset() {
	*x = CreateGroupMemberReq{}
	mi := &file_group_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupMemberReq) ProtoMessage() {}

func (x *CreateGroupMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupMemberReq.ProtoReflect.Descriptor instead.
func (*CreateGroupMemberReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{12}
}

func (x *CreateGroupMemberReq) GetMember() *GroupMember {
	if x != nil {
		return x.Member
	}
	return nil
}

type CreateGroupMemberResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Succ          bool                   `protobuf:"varint,1,opt,name=succ,proto3" json:"succ,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupMemberResp) Reset() {
	*x = CreateGroupMemberResp{}
	mi := &file_group_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupMemberResp) ProtoMessage() {}

func (x *CreateGroupMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupMemberResp.ProtoReflect.Descriptor instead.
func (*CreateGroupMemberResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{13}
}

func (x *CreateGroupMemberResp) GetSucc() bool {
	if x != nil {
		return x.Succ
	}
	return false
}

type UpdateGroupMemberReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Member        *GroupMember           `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGroupMemberReq) Reset() {
	*x = UpdateGroupMemberReq{}
	mi := &file_group_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGroupMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupMemberReq) ProtoMessage() {}

func (x *UpdateGroupMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupMemberReq.ProtoReflect.Descriptor instead.
func (*UpdateGroupMemberReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateGroupMemberReq) GetMember() *GroupMember {
	if x != nil {
		return x.Member
	}
	return nil
}

type UpdateGroupMemberResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Succ          bool                   `protobuf:"varint,1,opt,name=succ,proto3" json:"succ,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGroupMemberResp) Reset() {
	*x = UpdateGroupMemberResp{}
	mi := &file_group_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGroupMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupMemberResp) ProtoMessage() {}

func (x *UpdateGroupMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupMemberResp.ProtoReflect.Descriptor instead.
func (*UpdateGroupMemberResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateGroupMemberResp) GetSucc() bool {
	if x != nil {
		return x.Succ
	}
	return false
}

type DeleteGroupMemberReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       int64                  `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteGroupMemberReq) Reset() {
	*x = DeleteGroupMemberReq{}
	mi := &file_group_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGroupMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupMemberReq) ProtoMessage() {}

func (x *DeleteGroupMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupMemberReq.ProtoReflect.Descriptor instead.
func (*DeleteGroupMemberReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteGroupMemberReq) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type DeleteGroupMemberResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Succ          bool                   `protobuf:"varint,1,opt,name=succ,proto3" json:"succ,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteGroupMemberResp) Reset() {
	*x = DeleteGroupMemberResp{}
	mi := &file_group_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGroupMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupMemberResp) ProtoMessage() {}

func (x *DeleteGroupMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupMemberResp.ProtoReflect.Descriptor instead.
func (*DeleteGroupMemberResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteGroupMemberResp) GetSucc() bool {
	if x != nil {
		return x.Succ
	}
	return false
}

type GetGroupApplyByGroupIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       int64                  `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGroupApplyByGroupIdReq) Reset() {
	*x = GetGroupApplyByGroupIdReq{}
	mi := &file_group_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupApplyByGroupIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupApplyByGroupIdReq) ProtoMessage() {}

func (x *GetGroupApplyByGroupIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupApplyByGroupIdReq.ProtoReflect.Descriptor instead.
func (*GetGroupApplyByGroupIdReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{18}
}

func (x *GetGroupApplyByGroupIdReq) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type GetGroupApplyByGroupIdResp struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	GroupApplyList []*GroupApply          `protobuf:"bytes,1,rep,name=group_apply_list,json=groupApplyList,proto3" json:"group_apply_list,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetGroupApplyByGroupIdResp) Reset() {
	*x = GetGroupApplyByGroupIdResp{}
	mi := &file_group_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupApplyByGroupIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupApplyByGroupIdResp) ProtoMessage() {}

func (x *GetGroupApplyByGroupIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupApplyByGroupIdResp.ProtoReflect.Descriptor instead.
func (*GetGroupApplyByGroupIdResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{19}
}

func (x *GetGroupApplyByGroupIdResp) GetGroupApplyList() []*GroupApply {
	if x != nil {
		return x.GroupApplyList
	}
	return nil
}

type GetGroupApplyByUserIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGroupApplyByUserIdReq) Reset() {
	*x = GetGroupApplyByUserIdReq{}
	mi := &file_group_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupApplyByUserIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupApplyByUserIdReq) ProtoMessage() {}

func (x *GetGroupApplyByUserIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupApplyByUserIdReq.ProtoReflect.Descriptor instead.
func (*GetGroupApplyByUserIdReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{20}
}

func (x *GetGroupApplyByUserIdReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetGroupApplyByUserIdResp struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	GroupApplyList []*GroupApply          `protobuf:"bytes,1,rep,name=group_apply_list,json=groupApplyList,proto3" json:"group_apply_list,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetGroupApplyByUserIdResp) Reset() {
	*x = GetGroupApplyByUserIdResp{}
	mi := &file_group_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupApplyByUserIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupApplyByUserIdResp) ProtoMessage() {}

func (x *GetGroupApplyByUserIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupApplyByUserIdResp.ProtoReflect.Descriptor instead.
func (*GetGroupApplyByUserIdResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{21}
}

func (x *GetGroupApplyByUserIdResp) GetGroupApplyList() []*GroupApply {
	if x != nil {
		return x.GroupApplyList
	}
	return nil
}

type CreateGroupApplyReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Apply         *GroupApply            `protobuf:"bytes,1,opt,name=apply,proto3" json:"apply,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupApplyReq) Reset() {
	*x = CreateGroupApplyReq{}
	mi := &file_group_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupApplyReq) ProtoMessage() {}

func (x *CreateGroupApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupApplyReq.ProtoReflect.Descriptor instead.
func (*CreateGroupApplyReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{22}
}

func (x *CreateGroupApplyReq) GetApply() *GroupApply {
	if x != nil {
		return x.Apply
	}
	return nil
}

type CreateGroupApplyResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Succ          bool                   `protobuf:"varint,1,opt,name=succ,proto3" json:"succ,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupApplyResp) Reset() {
	*x = CreateGroupApplyResp{}
	mi := &file_group_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupApplyResp) ProtoMessage() {}

func (x *CreateGroupApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupApplyResp.ProtoReflect.Descriptor instead.
func (*CreateGroupApplyResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{23}
}

func (x *CreateGroupApplyResp) GetSucc() bool {
	if x != nil {
		return x.Succ
	}
	return false
}

type UpdateGroupApplyReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Apply         *GroupApply            `protobuf:"bytes,1,opt,name=apply,proto3" json:"apply,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGroupApplyReq) Reset() {
	*x = UpdateGroupApplyReq{}
	mi := &file_group_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGroupApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupApplyReq) ProtoMessage() {}

func (x *UpdateGroupApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupApplyReq.ProtoReflect.Descriptor instead.
func (*UpdateGroupApplyReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateGroupApplyReq) GetApply() *GroupApply {
	if x != nil {
		return x.Apply
	}
	return nil
}

type UpdateGroupApplyResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Succ          bool                   `protobuf:"varint,1,opt,name=succ,proto3" json:"succ,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGroupApplyResp) Reset() {
	*x = UpdateGroupApplyResp{}
	mi := &file_group_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGroupApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupApplyResp) ProtoMessage() {}

func (x *UpdateGroupApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupApplyResp.ProtoReflect.Descriptor instead.
func (*UpdateGroupApplyResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateGroupApplyResp) GetSucc() bool {
	if x != nil {
		return x.Succ
	}
	return false
}

type DeleteGroupApplyReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       int64                  `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteGroupApplyReq) Reset() {
	*x = DeleteGroupApplyReq{}
	mi := &file_group_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGroupApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupApplyReq) ProtoMessage() {}

func (x *DeleteGroupApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupApplyReq.ProtoReflect.Descriptor instead.
func (*DeleteGroupApplyReq) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteGroupApplyReq) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type DeleteGroupApplyResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Succ          bool                   `protobuf:"varint,1,opt,name=succ,proto3" json:"succ,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteGroupApplyResp) Reset() {
	*x = DeleteGroupApplyResp{}
	mi := &file_group_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGroupApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupApplyResp) ProtoMessage() {}

func (x *DeleteGroupApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupApplyResp.ProtoReflect.Descriptor instead.
func (*DeleteGroupApplyResp) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteGroupApplyResp) GetSucc() bool {
	if x != nil {
		return x.Succ
	}
	return false
}

type GroupInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       int64                  `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`          // 群聊ID，主键，自增
	GroupName     string                 `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`     // 群聊名称
	CreatorId     int32                  `protobuf:"varint,3,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`    // 创建者用户ID
	AvatarUrl     string                 `protobuf:"bytes,4,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`     // 群聊头像URL
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`                  // 群聊描述
	MaxMembers    int32                  `protobuf:"varint,6,opt,name=max_members,json=maxMembers,proto3" json:"max_members,omitempty"` // 群聊最大成员数
	Status        int32                  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`                           // 群聊状态（0:正常，1:解散）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupInfo) Reset() {
	*x = GroupInfo{}
	mi := &file_group_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfo) ProtoMessage() {}

func (x *GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfo.ProtoReflect.Descriptor instead.
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{28}
}

func (x *GroupInfo) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GroupInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GroupInfo) GetCreatorId() int32 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *GroupInfo) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *GroupInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GroupInfo) GetMaxMembers() int32 {
	if x != nil {
		return x.MaxMembers
	}
	return 0
}

func (x *GroupInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GroupMember struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                          // 主键，自增
	GroupId       int64                  `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"` // 群聊ID，外键
	UserId        int32                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`    // 用户ID
	Role          int32                  `protobuf:"varint,5,opt,name=role,proto3" json:"role,omitempty"`                      // 成员角色（0:普通成员，1:管理员，2:群主）
	Status        int32                  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                  // 成员状态（0:正常，1:已退出）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupMember) Reset() {
	*x = GroupMember{}
	mi := &file_group_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMember) ProtoMessage() {}

func (x *GroupMember) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMember.ProtoReflect.Descriptor instead.
func (*GroupMember) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{29}
}

func (x *GroupMember) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GroupMember) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GroupMember) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GroupMember) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *GroupMember) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GroupApply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       int64                  `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	ApplicantId   int32                  `protobuf:"varint,2,opt,name=applicant_id,json=applicantId,proto3" json:"applicant_id,omitempty"`
	Status        int32                  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	HandlerId     int32                  `protobuf:"varint,4,opt,name=handler_id,json=handlerId,proto3" json:"handler_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupApply) Reset() {
	*x = GroupApply{}
	mi := &file_group_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupApply) ProtoMessage() {}

func (x *GroupApply) ProtoReflect() protoreflect.Message {
	mi := &file_group_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupApply.ProtoReflect.Descriptor instead.
func (*GroupApply) Descriptor() ([]byte, []int) {
	return file_group_proto_rawDescGZIP(), []int{30}
}

func (x *GroupApply) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GroupApply) GetApplicantId() int32 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

func (x *GroupApply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GroupApply) GetHandlerId() int32 {
	if x != nil {
		return x.HandlerId
	}
	return 0
}

var File_group_proto protoreflect.FileDescriptor

var file_group_proto_rawDesc = string([]byte{
	0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1b, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x22, 0x2f, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x41, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x29, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x3f, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x30, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x0a, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x29, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x75, 0x63, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x75, 0x63, 0x63, 0x22,
	0x2f, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x22, 0x29, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x75, 0x63, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x75, 0x63, 0x63, 0x22, 0x31, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x40,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x22, 0x3c, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x2b,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x75, 0x63, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x75, 0x63, 0x63, 0x22, 0x3c, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x2b, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x75, 0x63, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x73, 0x75, 0x63, 0x63, 0x22, 0x31, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x75, 0x63, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x73, 0x75, 0x63, 0x63, 0x22, 0x36, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x53,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x42,
	0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x10,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x52, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x33, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61,
	0x70, 0x70, 0x6c, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x0e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x22, 0x2a, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x75, 0x63, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x75,
	0x63, 0x63, 0x22, 0x38, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x22, 0x2a, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x75, 0x63, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x73, 0x75, 0x63, 0x63, 0x22, 0x30, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x14, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x75, 0x63, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x73, 0x75, 0x63, 0x63, 0x22, 0xde, 0x01, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7d, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x0a, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x32, 0xb3, 0x07, 0x0a, 0x05, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x36, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x11, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64,
	0x12, 0x14, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x13, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x1a, 0x14, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x12, 0x16, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x42, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x1b, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x12, 0x14, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x12, 0x14, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3f, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x12, 0x14, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_group_proto_rawDescOnce sync.Once
	file_group_proto_rawDescData []byte
)

func file_group_proto_rawDescGZIP() []byte {
	file_group_proto_rawDescOnce.Do(func() {
		file_group_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_group_proto_rawDesc), len(file_group_proto_rawDesc)))
	})
	return file_group_proto_rawDescData
}

var file_group_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_group_proto_goTypes = []any{
	(*GetUserGroupsReq)(nil),           // 0: GetUserGroupsReq
	(*GetUserGroupsResp)(nil),          // 1: GetUserGroupsResp
	(*GetGroupInfoByIdReq)(nil),        // 2: GetGroupInfoByIdReq
	(*GetGroupInfoByIdResp)(nil),       // 3: GetGroupInfoByIdResp
	(*CreateGroupInfoReq)(nil),         // 4: CreateGroupInfoReq
	(*CreateGroupInfoResp)(nil),        // 5: CreateGroupInfoResp
	(*UpdateGroupInfoReq)(nil),         // 6: UpdateGroupInfoReq
	(*UpdateGroupInfoResp)(nil),        // 7: UpdateGroupInfoResp
	(*DeleteGroupInfoReq)(nil),         // 8: DeleteGroupInfoReq
	(*DeleteGroupInfoResp)(nil),        // 9: DeleteGroupInfoResp
	(*GetGroupMemberByIdReq)(nil),      // 10: GetGroupMemberByIdReq
	(*GetGroupMemberByIdResp)(nil),     // 11: GetGroupMemberByIdResp
	(*CreateGroupMemberReq)(nil),       // 12: CreateGroupMemberReq
	(*CreateGroupMemberResp)(nil),      // 13: CreateGroupMemberResp
	(*UpdateGroupMemberReq)(nil),       // 14: UpdateGroupMemberReq
	(*UpdateGroupMemberResp)(nil),      // 15: UpdateGroupMemberResp
	(*DeleteGroupMemberReq)(nil),       // 16: DeleteGroupMemberReq
	(*DeleteGroupMemberResp)(nil),      // 17: DeleteGroupMemberResp
	(*GetGroupApplyByGroupIdReq)(nil),  // 18: GetGroupApplyByGroupIdReq
	(*GetGroupApplyByGroupIdResp)(nil), // 19: GetGroupApplyByGroupIdResp
	(*GetGroupApplyByUserIdReq)(nil),   // 20: GetGroupApplyByUserIdReq
	(*GetGroupApplyByUserIdResp)(nil),  // 21: GetGroupApplyByUserIdResp
	(*CreateGroupApplyReq)(nil),        // 22: CreateGroupApplyReq
	(*CreateGroupApplyResp)(nil),       // 23: CreateGroupApplyResp
	(*UpdateGroupApplyReq)(nil),        // 24: UpdateGroupApplyReq
	(*UpdateGroupApplyResp)(nil),       // 25: UpdateGroupApplyResp
	(*DeleteGroupApplyReq)(nil),        // 26: DeleteGroupApplyReq
	(*DeleteGroupApplyResp)(nil),       // 27: DeleteGroupApplyResp
	(*GroupInfo)(nil),                  // 28: GroupInfo
	(*GroupMember)(nil),                // 29: GroupMember
	(*GroupApply)(nil),                 // 30: GroupApply
}
var file_group_proto_depIdxs = []int32{
	28, // 0: GetGroupInfoByIdResp.group_info:type_name -> GroupInfo
	28, // 1: CreateGroupInfoReq.group_info:type_name -> GroupInfo
	28, // 2: UpdateGroupInfoReq.group_info:type_name -> GroupInfo
	29, // 3: GetGroupMemberByIdResp.members:type_name -> GroupMember
	29, // 4: CreateGroupMemberReq.member:type_name -> GroupMember
	29, // 5: UpdateGroupMemberReq.member:type_name -> GroupMember
	30, // 6: GetGroupApplyByGroupIdResp.group_apply_list:type_name -> GroupApply
	30, // 7: GetGroupApplyByUserIdResp.group_apply_list:type_name -> GroupApply
	30, // 8: CreateGroupApplyReq.apply:type_name -> GroupApply
	30, // 9: UpdateGroupApplyReq.apply:type_name -> GroupApply
	0,  // 10: Group.GetUserGroups:input_type -> GetUserGroupsReq
	2,  // 11: Group.GetGroupInfoById:input_type -> GetGroupInfoByIdReq
	4,  // 12: Group.CreateGroupInfo:input_type -> CreateGroupInfoReq
	6,  // 13: Group.UpdateGroupInfo:input_type -> UpdateGroupInfoReq
	8,  // 14: Group.DeleteGroupInfo:input_type -> DeleteGroupInfoReq
	10, // 15: Group.GetGroupMemberById:input_type -> GetGroupMemberByIdReq
	12, // 16: Group.CreateGroupMember:input_type -> CreateGroupMemberReq
	14, // 17: Group.UpdateGroupMember:input_type -> UpdateGroupMemberReq
	16, // 18: Group.DeleteGroupMember:input_type -> DeleteGroupMemberReq
	18, // 19: Group.GetGroupApplyByGroupId:input_type -> GetGroupApplyByGroupIdReq
	20, // 20: Group.GetGroupApplyByUserId:input_type -> GetGroupApplyByUserIdReq
	22, // 21: Group.CreateGroupApply:input_type -> CreateGroupApplyReq
	24, // 22: Group.UpdateGroupApply:input_type -> UpdateGroupApplyReq
	26, // 23: Group.DeleteGroupApply:input_type -> DeleteGroupApplyReq
	1,  // 24: Group.GetUserGroups:output_type -> GetUserGroupsResp
	3,  // 25: Group.GetGroupInfoById:output_type -> GetGroupInfoByIdResp
	5,  // 26: Group.CreateGroupInfo:output_type -> CreateGroupInfoResp
	7,  // 27: Group.UpdateGroupInfo:output_type -> UpdateGroupInfoResp
	9,  // 28: Group.DeleteGroupInfo:output_type -> DeleteGroupInfoResp
	11, // 29: Group.GetGroupMemberById:output_type -> GetGroupMemberByIdResp
	13, // 30: Group.CreateGroupMember:output_type -> CreateGroupMemberResp
	15, // 31: Group.UpdateGroupMember:output_type -> UpdateGroupMemberResp
	17, // 32: Group.DeleteGroupMember:output_type -> DeleteGroupMemberResp
	19, // 33: Group.GetGroupApplyByGroupId:output_type -> GetGroupApplyByGroupIdResp
	21, // 34: Group.GetGroupApplyByUserId:output_type -> GetGroupApplyByUserIdResp
	23, // 35: Group.CreateGroupApply:output_type -> CreateGroupApplyResp
	25, // 36: Group.UpdateGroupApply:output_type -> UpdateGroupApplyResp
	27, // 37: Group.DeleteGroupApply:output_type -> DeleteGroupApplyResp
	24, // [24:38] is the sub-list for method output_type
	10, // [10:24] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_group_proto_init() }
func file_group_proto_init() {
	if File_group_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_group_proto_rawDesc), len(file_group_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_group_proto_goTypes,
		DependencyIndexes: file_group_proto_depIdxs,
		MessageInfos:      file_group_proto_msgTypes,
	}.Build()
	File_group_proto = out.File
	file_group_proto_goTypes = nil
	file_group_proto_depIdxs = nil
}
