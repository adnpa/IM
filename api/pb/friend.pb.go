// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.1
// source: friend.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IsFriendReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Left          int32                  `protobuf:"varint,1,opt,name=left,proto3" json:"left,omitempty"`
	Right         int32                  `protobuf:"varint,2,opt,name=right,proto3" json:"right,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsFriendReq) Reset() {
	*x = IsFriendReq{}
	mi := &file_friend_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFriendReq) ProtoMessage() {}

func (x *IsFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFriendReq.ProtoReflect.Descriptor instead.
func (*IsFriendReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{0}
}

func (x *IsFriendReq) GetLeft() int32 {
	if x != nil {
		return x.Left
	}
	return 0
}

func (x *IsFriendReq) GetRight() int32 {
	if x != nil {
		return x.Right
	}
	return 0
}

type IsFriendResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsFriend      bool                   `protobuf:"varint,1,opt,name=is_friend,json=isFriend,proto3" json:"is_friend,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsFriendResp) Reset() {
	*x = IsFriendResp{}
	mi := &file_friend_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFriendResp) ProtoMessage() {}

func (x *IsFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFriendResp.ProtoReflect.Descriptor instead.
func (*IsFriendResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{1}
}

func (x *IsFriendResp) GetIsFriend() bool {
	if x != nil {
		return x.IsFriend
	}
	return false
}

type GetFriendsByUserIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           int32                  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendsByUserIdReq) Reset() {
	*x = GetFriendsByUserIdReq{}
	mi := &file_friend_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendsByUserIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendsByUserIdReq) ProtoMessage() {}

func (x *GetFriendsByUserIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendsByUserIdReq.ProtoReflect.Descriptor instead.
func (*GetFriendsByUserIdReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{2}
}

func (x *GetFriendsByUserIdReq) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GetFriendsByUserIdResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Friends       []*Friendship          `protobuf:"bytes,1,rep,name=friends,proto3" json:"friends,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendsByUserIdResp) Reset() {
	*x = GetFriendsByUserIdResp{}
	mi := &file_friend_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendsByUserIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendsByUserIdResp) ProtoMessage() {}

func (x *GetFriendsByUserIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendsByUserIdResp.ProtoReflect.Descriptor instead.
func (*GetFriendsByUserIdResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{3}
}

func (x *GetFriendsByUserIdResp) GetFriends() []*Friendship {
	if x != nil {
		return x.Friends
	}
	return nil
}

type CreateFriendReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *Friendship            `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFriendReq) Reset() {
	*x = CreateFriendReq{}
	mi := &file_friend_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFriendReq) ProtoMessage() {}

func (x *CreateFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFriendReq.ProtoReflect.Descriptor instead.
func (*CreateFriendReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{4}
}

func (x *CreateFriendReq) GetInfo() *Friendship {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateFriendResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFriendResp) Reset() {
	*x = CreateFriendResp{}
	mi := &file_friend_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFriendResp) ProtoMessage() {}

func (x *CreateFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFriendResp.ProtoReflect.Descriptor instead.
func (*CreateFriendResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{5}
}

func (x *CreateFriendResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteFriendReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FriendId      int32                  `protobuf:"varint,2,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFriendReq) Reset() {
	*x = DeleteFriendReq{}
	mi := &file_friend_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendReq) ProtoMessage() {}

func (x *DeleteFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendReq.ProtoReflect.Descriptor instead.
func (*DeleteFriendReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteFriendReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteFriendReq) GetFriendId() int32 {
	if x != nil {
		return x.FriendId
	}
	return 0
}

type DeleteFriendResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFriendResp) Reset() {
	*x = DeleteFriendResp{}
	mi := &file_friend_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendResp) ProtoMessage() {}

func (x *DeleteFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendResp.ProtoReflect.Descriptor instead.
func (*DeleteFriendResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteFriendResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UpdateFriendReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *Friendship            `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFriendReq) Reset() {
	*x = UpdateFriendReq{}
	mi := &file_friend_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFriendReq) ProtoMessage() {}

func (x *UpdateFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFriendReq.ProtoReflect.Descriptor instead.
func (*UpdateFriendReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateFriendReq) GetInfo() *Friendship {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateFriendResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *Friendship            `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFriendResp) Reset() {
	*x = UpdateFriendResp{}
	mi := &file_friend_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFriendResp) ProtoMessage() {}

func (x *UpdateFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFriendResp.ProtoReflect.Descriptor instead.
func (*UpdateFriendResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateFriendResp) GetInfo() *Friendship {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetFriendApplyReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendApplyReq) Reset() {
	*x = GetFriendApplyReq{}
	mi := &file_friend_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendApplyReq) ProtoMessage() {}

func (x *GetFriendApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendApplyReq.ProtoReflect.Descriptor instead.
func (*GetFriendApplyReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{10}
}

func (x *GetFriendApplyReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetFriendApplyResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FriendApplys  []*FriendApply         `protobuf:"bytes,1,rep,name=friend_applys,json=friendApplys,proto3" json:"friend_applys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendApplyResp) Reset() {
	*x = GetFriendApplyResp{}
	mi := &file_friend_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendApplyResp) ProtoMessage() {}

func (x *GetFriendApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendApplyResp.ProtoReflect.Descriptor instead.
func (*GetFriendApplyResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{11}
}

func (x *GetFriendApplyResp) GetFriendApplys() []*FriendApply {
	if x != nil {
		return x.FriendApplys
	}
	return nil
}

type CreateFriendApplyReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FriendApply   *FriendApply           `protobuf:"bytes,1,opt,name=friend_apply,json=friendApply,proto3" json:"friend_apply,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFriendApplyReq) Reset() {
	*x = CreateFriendApplyReq{}
	mi := &file_friend_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFriendApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFriendApplyReq) ProtoMessage() {}

func (x *CreateFriendApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFriendApplyReq.ProtoReflect.Descriptor instead.
func (*CreateFriendApplyReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{12}
}

func (x *CreateFriendApplyReq) GetFriendApply() *FriendApply {
	if x != nil {
		return x.FriendApply
	}
	return nil
}

type CreateFriendApplyResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFriendApplyResp) Reset() {
	*x = CreateFriendApplyResp{}
	mi := &file_friend_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFriendApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFriendApplyResp) ProtoMessage() {}

func (x *CreateFriendApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFriendApplyResp.ProtoReflect.Descriptor instead.
func (*CreateFriendApplyResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{13}
}

func (x *CreateFriendApplyResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UpdateFriendApplyReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FriendApply   *FriendApply           `protobuf:"bytes,1,opt,name=friend_apply,json=friendApply,proto3" json:"friend_apply,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFriendApplyReq) Reset() {
	*x = UpdateFriendApplyReq{}
	mi := &file_friend_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFriendApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFriendApplyReq) ProtoMessage() {}

func (x *UpdateFriendApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFriendApplyReq.ProtoReflect.Descriptor instead.
func (*UpdateFriendApplyReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateFriendApplyReq) GetFriendApply() *FriendApply {
	if x != nil {
		return x.FriendApply
	}
	return nil
}

type UpdateFriendApplyResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFriendApplyResp) Reset() {
	*x = UpdateFriendApplyResp{}
	mi := &file_friend_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFriendApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFriendApplyResp) ProtoMessage() {}

func (x *UpdateFriendApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFriendApplyResp.ProtoReflect.Descriptor instead.
func (*UpdateFriendApplyResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateFriendApplyResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteFriendApplyReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromId        int32                  `protobuf:"varint,1,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
	ToId          int32                  `protobuf:"varint,2,opt,name=to_id,json=toId,proto3" json:"to_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFriendApplyReq) Reset() {
	*x = DeleteFriendApplyReq{}
	mi := &file_friend_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFriendApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendApplyReq) ProtoMessage() {}

func (x *DeleteFriendApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendApplyReq.ProtoReflect.Descriptor instead.
func (*DeleteFriendApplyReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteFriendApplyReq) GetFromId() int32 {
	if x != nil {
		return x.FromId
	}
	return 0
}

func (x *DeleteFriendApplyReq) GetToId() int32 {
	if x != nil {
		return x.ToId
	}
	return 0
}

type DeleteFriendApplyResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFriendApplyResp) Reset() {
	*x = DeleteFriendApplyResp{}
	mi := &file_friend_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFriendApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendApplyResp) ProtoMessage() {}

func (x *DeleteFriendApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendApplyResp.ProtoReflect.Descriptor instead.
func (*DeleteFriendApplyResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteFriendApplyResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type Friendship struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FriendId      int32                  `protobuf:"varint,2,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	Comment       string                 `protobuf:"bytes,3,opt,name=Comment,proto3" json:"Comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Friendship) Reset() {
	*x = Friendship{}
	mi := &file_friend_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Friendship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Friendship) ProtoMessage() {}

func (x *Friendship) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Friendship.ProtoReflect.Descriptor instead.
func (*Friendship) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{18}
}

func (x *Friendship) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Friendship) GetFriendId() int32 {
	if x != nil {
		return x.FriendId
	}
	return 0
}

func (x *Friendship) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type FriendApply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          int32                  `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To            int32                  `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	Flag          int32                  `protobuf:"varint,3,opt,name=flag,proto3" json:"flag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FriendApply) Reset() {
	*x = FriendApply{}
	mi := &file_friend_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FriendApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendApply) ProtoMessage() {}

func (x *FriendApply) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendApply.ProtoReflect.Descriptor instead.
func (*FriendApply) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{19}
}

func (x *FriendApply) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *FriendApply) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *FriendApply) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

var File_friend_proto protoreflect.FileDescriptor

var file_friend_proto_rawDesc = string([]byte{
	0x0a, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x37,
	0x0a, 0x0b, 0x49, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x65, 0x66,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x22, 0x2b, 0x0a, 0x0c, 0x49, 0x73, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x22, 0x29, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22,
	0x3f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x07, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x52, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73,
	0x22, 0x32, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0x2c, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x47, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x10, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x32, 0x0a, 0x0f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x33, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0x2c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x47, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x0c, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x22, 0x47, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x71, 0x12, 0x2f, 0x0a, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x6c,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x22, 0x31, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x47, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a,
	0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x52, 0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x22, 0x31,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x44, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x5c, 0x0a, 0x0a, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x45, 0x0a, 0x0b, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x32,
	0x9e, 0x04, 0x0a, 0x06, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x45, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x33, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x12, 0x10, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x10, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x10, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x27, 0x0a, 0x08, 0x49, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x0c, 0x2e, 0x49,
	0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x49, 0x73, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x13, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x15, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x15, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x12, 0x15, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_friend_proto_rawDescOnce sync.Once
	file_friend_proto_rawDescData []byte
)

func file_friend_proto_rawDescGZIP() []byte {
	file_friend_proto_rawDescOnce.Do(func() {
		file_friend_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_friend_proto_rawDesc), len(file_friend_proto_rawDesc)))
	})
	return file_friend_proto_rawDescData
}

var file_friend_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_friend_proto_goTypes = []any{
	(*IsFriendReq)(nil),            // 0: IsFriendReq
	(*IsFriendResp)(nil),           // 1: IsFriendResp
	(*GetFriendsByUserIdReq)(nil),  // 2: GetFriendsByUserIdReq
	(*GetFriendsByUserIdResp)(nil), // 3: GetFriendsByUserIdResp
	(*CreateFriendReq)(nil),        // 4: CreateFriendReq
	(*CreateFriendResp)(nil),       // 5: CreateFriendResp
	(*DeleteFriendReq)(nil),        // 6: DeleteFriendReq
	(*DeleteFriendResp)(nil),       // 7: DeleteFriendResp
	(*UpdateFriendReq)(nil),        // 8: UpdateFriendReq
	(*UpdateFriendResp)(nil),       // 9: UpdateFriendResp
	(*GetFriendApplyReq)(nil),      // 10: GetFriendApplyReq
	(*GetFriendApplyResp)(nil),     // 11: GetFriendApplyResp
	(*CreateFriendApplyReq)(nil),   // 12: CreateFriendApplyReq
	(*CreateFriendApplyResp)(nil),  // 13: CreateFriendApplyResp
	(*UpdateFriendApplyReq)(nil),   // 14: UpdateFriendApplyReq
	(*UpdateFriendApplyResp)(nil),  // 15: UpdateFriendApplyResp
	(*DeleteFriendApplyReq)(nil),   // 16: DeleteFriendApplyReq
	(*DeleteFriendApplyResp)(nil),  // 17: DeleteFriendApplyResp
	(*Friendship)(nil),             // 18: Friendship
	(*FriendApply)(nil),            // 19: FriendApply
}
var file_friend_proto_depIdxs = []int32{
	18, // 0: GetFriendsByUserIdResp.friends:type_name -> Friendship
	18, // 1: CreateFriendReq.info:type_name -> Friendship
	18, // 2: UpdateFriendReq.info:type_name -> Friendship
	18, // 3: UpdateFriendResp.info:type_name -> Friendship
	19, // 4: GetFriendApplyResp.friend_applys:type_name -> FriendApply
	19, // 5: CreateFriendApplyReq.friend_apply:type_name -> FriendApply
	19, // 6: UpdateFriendApplyReq.friend_apply:type_name -> FriendApply
	2,  // 7: Friend.GetFriendsByUserId:input_type -> GetFriendsByUserIdReq
	4,  // 8: Friend.CreateFriend:input_type -> CreateFriendReq
	6,  // 9: Friend.DeleteFriend:input_type -> DeleteFriendReq
	8,  // 10: Friend.UpdateFriend:input_type -> UpdateFriendReq
	0,  // 11: Friend.IsFriend:input_type -> IsFriendReq
	10, // 12: Friend.GetFriendApply:input_type -> GetFriendApplyReq
	12, // 13: Friend.CreateFriendApply:input_type -> CreateFriendApplyReq
	14, // 14: Friend.UpdateFriendApply:input_type -> UpdateFriendApplyReq
	16, // 15: Friend.DeleteFriendApply:input_type -> DeleteFriendApplyReq
	3,  // 16: Friend.GetFriendsByUserId:output_type -> GetFriendsByUserIdResp
	5,  // 17: Friend.CreateFriend:output_type -> CreateFriendResp
	7,  // 18: Friend.DeleteFriend:output_type -> DeleteFriendResp
	9,  // 19: Friend.UpdateFriend:output_type -> UpdateFriendResp
	1,  // 20: Friend.IsFriend:output_type -> IsFriendResp
	11, // 21: Friend.GetFriendApply:output_type -> GetFriendApplyResp
	13, // 22: Friend.CreateFriendApply:output_type -> CreateFriendApplyResp
	15, // 23: Friend.UpdateFriendApply:output_type -> UpdateFriendApplyResp
	17, // 24: Friend.DeleteFriendApply:output_type -> DeleteFriendApplyResp
	16, // [16:25] is the sub-list for method output_type
	7,  // [7:16] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_friend_proto_init() }
func file_friend_proto_init() {
	if File_friend_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_friend_proto_rawDesc), len(file_friend_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_friend_proto_goTypes,
		DependencyIndexes: file_friend_proto_depIdxs,
		MessageInfos:      file_friend_proto_msgTypes,
	}.Build()
	File_friend_proto = out.File
	file_friend_proto_goTypes = nil
	file_friend_proto_depIdxs = nil
}
